{"name":"Starterkit","tagline":"Pygame starter kit","body":"# starterkit\r\n\r\n![Starter kit](http://i43.tinypic.com/dztnpe.png)\r\n\r\n### Setting up\r\n```\r\n$ git clone https://github.com/alveyworld-dev/starterkit\r\n$ cd starterkit\r\n$ python main.py\r\n```\r\n\r\n### Resources\r\n* [Intro to game design](https://docs.google.com/presentation/d/11oSHUDFR2WoMJXsoLWD1vtIr-BZaxDjECcIPFVro8iA/edit?usp=sharing)\r\n* [Using sprites](https://github.com/alveyworld-dev/starterkit/wiki/Sprites)\r\n* [Setting a background](https://github.com/alveyworld-dev/starterkit/wiki/Background)\r\n* [Audio](https://github.com/alveyworld-dev/starterkit/wiki/Audio)\r\n\r\n### Overview\r\n* `resources/` - Any game resources: fonts, sprites, sounds, music, etc.\r\n* `source/` - Game source code\r\n    - `draw.py` - Handles the `draw()` function\r\n    - `game.py` - Global game variables\r\n    - `graphics.py` - Helpful graphics functions\r\n    - `sprite.py` - Sprite class\r\n    - `update.py` - Handles the `update()` function\r\n\r\n### Modifications\r\nThere are two main parts of the starter kit that you will want to start your\r\nmodifications to.\r\n\r\n#### Game loop\r\nThe game loop is contained in `main.py`, and simply repeats `update` and `draw`\r\n until exited.\r\n\r\n#### Update\r\n`update` is where you will want to do all your math and basic game logic.\r\n```python\r\ndef update():\r\n    \"\"\"\r\n    Update game world here\r\n    \"\"\"\r\n\r\n    # insert logic here\r\n    \r\n    return\r\n```\r\n\r\n#### Draw\r\n`draw` is simply that - drawing the game world.  You should refrain from doing\r\nand logic code in `draw`, use it simply for drawing.\r\n```python\r\ndef draw():\r\n    \"\"\"\r\n    Drawing logic\r\n    \"\"\"\r\n\r\n    # Fill the screen with black\r\n    game.screen.fill((240, 240, 240))\r\n    \r\n    # insert logic here\r\n\r\n    # Don't change these\r\n    pygame.display.update()\r\n    pygame.display.flip()\r\n\r\n    return\r\n```\r\nNotice that there is some code already in the function: you shouldn't change\r\nthese unless you know what you are doing.  Simply insert your own code after\r\nthe comment \"insert logic here\".\r\n\r\n#### Init\r\nThe `game.init` function (located in the `source/game.py` file) can be modified to contain game-wide initilization routines, and is run once before the game loop starts.  It is useful to put variable assignments, resource loading, and any other setup that might need doing here.\r\n```python\r\n...\r\nmy_var = 0\r\n\r\ndef init():\r\n    game.sprites[\"player\"] = Sprite(\"player.png\")\r\n    my_var = game.sprites[\"player\"].rect\r\n    return\r\n```\r\n\r\n#### Using sprites\r\nUsing the `Sprite` class, it is possible to easily abstract the process of loading images, storing position, and drawing.\r\n\r\nA sprite can be created by importing `sprite.Sprite` and providing it the filename of the image that will represent it and a position (as as tuple)\r\n```python\r\nfrom sprite import Sprite\r\n\r\nmy_sprite = Sprite(\"my_image.png\", (50, 50))\r\n```\r\nThe `Sprite` class contains several useful properties which can be manipulated at runtime:\r\n* `Sprite.rect` - Rectangle describing sprite image, useful for collision detection\r\n* `Sprite.image` - Texture representing the sprite\r\nSprites can be draw by invoking the `Sprite.draw` function.\r\n```\r\nmy_sprite = Sprite(\"my_image.png\", (50, 50))\r\nmy_sprite.draw()\r\n```\r\n\r\nInside `game.py` exists a dictionary called `sprites`, which can be used to store and access sprites throughout the game.\r\n```python\r\nimport game\r\nfrom sprite import Sprite\r\n\r\nmy_sprite = Sprite(\"my_image.png\")\r\ngame.sprites[\"player\"] = my_sprite\r\n```\r\n\r\n#### Resources\r\nWhen providing arguments to functions or classes that allow filenames to be taken (for example, the `sprite` class),\r\nthe files should be placed in the `resources/` folder.  When referencing your file, it is only nessisary to name\r\nthe file itself, not the full path.  For example:\r\n```python\r\nmy_sprite = Sprite(\"test.png\", (50, 50))\r\n```\r\nbecomes\r\n```python\r\nmy_sprite = Sprite(\"resources/test.png\", (50, 50))\r\n```\r\n\r\n### License\r\n```\r\nCopyright 2014 Joshua Beitler, Brandon Bench, Alveyworld\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. \r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}